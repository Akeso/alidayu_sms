#!/usr/bin/env ruby

require "optparse"
require "pp"
require 'rack'

$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])
require 'alidayu_sms'

options = {method: 'batchSendSms'}
attributes = {}

OptionParser.new do |o|
  o.banner = <<-EOF
Usage:
  Starting:
    alidayu_sms [-p <phone>] [-c <code>] [-m <model>] [-t <type>]

  Querying:
    alidayu_sms -v

  Options:
EOF

  o.on("-p", "--phones=phones", String, "send alidayu_sms phones") do |x|
    options[:phones] = x
  end

  o.on("-c", "--code=code", String, "send alidayu_sms code") do |x|
    options[:code] = x
  end

  o.on("-s", "--source=source", String, "send alidayu_sms source [zucp|taobao] (Default: zucp)") do |x|
    options[:source] = x
  end

  o.on("-m", "--m=method", String, "send alidayu_sms method [batch] (Default: batch)") do |x|
    options[:method] = x
  end

  o.on("-a", "--a=attributes", String, "attributes: ()") do |x|
    attributes = Rack::Utils.parse_nested_query(x)
  end

  o.on("-h", "--help", "Show help documentation") do |x|
    puts o
    exit
  end

  o.on("-v", "--version", "Show alidayu_sms version") do |x|
    puts "Version: #{AlidayuSms::VERSION}"
    exit
  end
end.parse!

options.merge!(attributes)

#测试用的， 不过我的key可能无效了哦
options = options.merge(
  :code=> 1314520,
  :product => "王平爱王玲",
  :extend => '',
  :sms_free_sign_name=> "注册验证",
  :sms_template_code=> "SMS_5045503"
)
sys_options = {
  app_key: 23304964,
  app_secret: "12b083a7c5e89ce3093067ddd65c4b5a",
  post_url: 'http://gw.api.taobao.com/router/rest'
}

begin
  puts options.inspect
  puts AlidayuSmsSender.new(sys_options).send(options[:method], options)
rescue => e
  puts 'Uncaught exception'
  puts e.message
  puts e.backtrace.join("\n")
end

# sms -p 13262902619 -s taobao -a 'app_secret=5aff003ac3c7243da65adef1e7c9c363&app_key=23272925&sms_free_sign_name=爱客验证码&sms_template_code=SMS_2575137&sms_param[code]=xxx&sms_param[product]=ddd'

